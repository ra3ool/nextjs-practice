generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int           @id @default(autoincrement())
  name        String?
  email       String        @unique
  password    String
  role        String        @default("user")
  createdAt   DateTime      @default(now())
  Cart        Cart[]
  UserAddress UserAddress[]

  @@map("users")
}

model UserAddress {
  id          Int      @id @default(autoincrement())
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      Int
  country     String   @db.VarChar(50)
  city        String   @db.VarChar(50)
  address     String   @db.VarChar(255)
  postalCode  String?  @db.VarChar(20)
  lat         Decimal? @db.Decimal(10, 7)
  lng         Decimal? @db.Decimal(10, 7)
  phoneNumber String   @db.VarChar(20)
  isDefault   Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@unique([userId, address, postalCode])
  @@index([userId])
  @@map("user_addresses")
}

model Product {
  id          Int      @id @default(autoincrement())
  name        String   @db.VarChar(255)
  slug        String   @unique @db.VarChar(255)
  description String   @db.Text
  price       Decimal  @default(0) @db.Decimal(12, 2)
  rate        Decimal  @default(0) @db.Decimal(3, 2)
  stock       Int      @default(0)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  images      String   @db.Text
  category    Category @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  categoryId  Int
  brand       Brand    @relation(fields: [brandId], references: [id], onDelete: Cascade)
  brandId     Int

  @@map("products")
}

model Category {
  id       Int       @id @default(autoincrement())
  name     String    @db.VarChar(100)
  slug     String    @unique @db.VarChar(100)
  products Product[]

  @@map("categories")
}

model Brand {
  id       Int       @id @default(autoincrement())
  name     String    @db.VarChar(100)
  slug     String    @unique @db.VarChar(100)
  products Product[]

  @@map("brands")
}

model Cart {
  id            Int      @id @default(autoincrement())
  user          User?    @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId        Int?
  sessionCartId String   @unique
  items         Json     @default("[]") @db.Json
  itemsPrice    Decimal  @default(0) @db.Decimal(12, 2)
  totalPrice    Decimal  @default(0) @db.Decimal(12, 2)
  shippingPrice Decimal  @default(0) @db.Decimal(12, 2)
  taxPrice      Decimal  @default(0) @db.Decimal(12, 2)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  @@map("cart")
}
